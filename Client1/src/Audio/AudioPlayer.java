package Audio;

import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
/**
 * Class {@code AudioPlayer} Audio player in the game
 *
 * <p> For playing the audio in the game
 *
 * @author : Damon,Weizhi,JavaDoc edit by Weizhi
 * @since : 19/02/2020
 */
public class AudioPlayer {
    //private static List<Integer> buffers = new ArrayList<Integer>();
    /** Audio Thread to play music{@value} */
    public static AudioThread thread;

    /**
     * Stop Audio from playing
     *
     * <p> Stop playing current audio
     * @author Weizhi
     * @version 1.0
     */
    public static void stopMusic(){
        thread.stopMusic();
    }

    /**
     * Start Playing Audio
     *
     * <p> Start playing current audio
     * @author Weizhi
     * @version 1.0
     */
    public static void startMusic(){
        thread.startMusic();
    }

    /**
     * Play Audio from audio get from file
     *
     * <p> no comment
     * @param sfx AudioClip Class generated by target audio file
     * @param vol the volume of the sound, from 0 to 1, the volume increase
     * @author Damon,JavaDoc edit by Weizhi
     * @version 1.0
     */
    public static void playSound(AudioClip sfx, double vol) {
        thread = new AudioThread(sfx,vol);
        thread.run();

    }

    /**
     * Set the volume of the sound
     *
     * <p> no comment
     * @param clip Clip Class generated by target audio file
     * @param vol the volume of the sound, from 0 to 1, the volume increase
     * @author Damon,JavaDoc edit by Weizhi
     * @version 1.0
     */
    private static void setVol(double vol, Clip clip) {
        FloatControl gain = (FloatControl)clip.getControl(FloatControl.Type.MASTER_GAIN);
        //Using variable "db" (Decibels)
        //even though I have a vol variable as when working with gain you it to be in decibels as float is in the scale of 0 to 1.0
        float dB = (float) (Math.log(vol) / Math.log(10) * 20);
        gain.setValue(dB);
    }
}
